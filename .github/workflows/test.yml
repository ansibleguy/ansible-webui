---

name: Test

on:
  push:
    branches: [latest]
    paths:
      - '**.py'
      - '.github/workflows/test.yml'
      - 'requirements_test.txt'
  pull_request:
    branches: [latest]
    paths:
      - '**.py'
      - '**.yml'
      - '.github/workflows/test.yml'
      - 'requirements_test.txt'
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements_test.txt >/dev/null
          pip install -r requirements_build.txt >/dev/null
          pip install -r requirements.txt >/dev/null
        shell: bash

      - name: Testing DB migrations for errors & warnings
        run: |
          m1=$(python3 manage.py makemigrations 2>&1)
          if echo "$m1" | grep -q 'WARNING'; then exit 1;fi

          m2=$(python3 manage.py migrate 2>&1)
          if echo "$m2" | grep -q 'WARNING'; then exit 1;fi

          m3=$(python3 manage.py migrate aw 2>&1)
          if echo "$m3" | grep -q 'WARNING'; then exit 1;fi
        shell: bash
        working-directory: src/ansible-webui/

      - name: Testing to start Ansible-WebUI
        run: |
          set +e
          timeout 2 python3 src/ansible-webui
          ec="$?"
          if [[ "$ec" != "124" ]]
          then
            exit 1
          fi
        shell: bash

      - name: Running Tests
        run: python3 -m pytest
        shell: bash

      - name: Testing to build Ansible-WebUI with PIP
        run: |
          cd /tmp
          echo 'CREATING TMP VENV'
          tmp_venv="/tmp/ansible-webui-venv/$(date +%s)"
          python3 -m virtualenv "$tmp_venv" >/dev/null
          source "${tmp_venv}/bin/activate"

          echo 'INSTALLING MODULE'
          python3 -m pip install -e "$GITHUB_WORKSPACE" >/dev/null

          set +e
          echo 'RUNNING APP'
          timeout 2 python3 -m ansible-webui
          ec="$?"

          echo 'CLEANUP'
          deactivate
          rm -rf "$tmp_venv"

          if [[ "$ec" != "124" ]]
          then
            exit 1
          fi
        shell: bash
